name: Backend CD

on:
  pull_request:
    paths:
      - '.github/workflows/backend-cd.yaml'
      - '**/backend/**'
    branches:
      - 'main'
  push:
    paths:
      - '.github/workflows/backend-cd.yaml'
  workflow_dispatch:

defaults:
  run:
    shell: bash
    working-directory: ./starter/backend

permissions:
  contents: read

jobs:
  backend-ci:
    uses: ./.github/workflows/backend-ci.yaml
    name: Backend CI - Lint, Test & Build

  push-to-ecr:
    name: Backend CD
    needs: backend-ci
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'false'

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: backend
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build  -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

  build-eks:
    needs: push-to-ecr
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./starter/backend/k8s
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1

      - name: Configure kubeconfig
        run: aws eks update-kubeconfig --name cluster --region us-east-1

      - name: Setup Kustomize
        uses: imranismail/setup-kustomize@v2
        with:
          kustomize-version: '5.0.0'

      - name: Get ecr repo uri and tag
        run: |
          LATEST_IMAGE=$(aws ecr describe-images \
            --repository-name your-repo-name \
            --query 'sort_by(imageDetails,& imagePushedAt)[-1]' \
            --output json)

          REPO_URI=$(aws ecr describe-repositories \
            --repository-names frontend \
            --query 'repositories[0].repositoryUri' \
            --output text)

          TAG=$(echo $LATEST_IMAGE | jq -r '.imageTags[0]')

          echo "REPO_URI=$REPO_URI" >> "$GITHUB_ENV"
          echo "TAG=$TAG" >> "$GITHUB_ENV"

      - name: Build and apply | Deploy with Kustomize
        run: |
          kustomize edit set image frontend=$REPO_URI:$TAG
          kustomize build | kubectl apply -f -
