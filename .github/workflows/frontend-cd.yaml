name: Frontend CD

on:
  push:
    paths:
      - '**/frontend/**'
      - './github/workflows/**'
    branches:
      - 'main'
  workflow_dispatch:

defaults:
  run:
    shell: bash
    working-directory: ./starter/frontend

env:
  AWS_REGION: us-east-1
  REPOSITORY: frontend

jobs:
  lint-test-build:
    uses: ./.github/workflows/frontend-ci.yaml
    name: Frontend CI

  push-to-ecr:
    name: Frontend CD
    needs: lint-test-build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'false'

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build --build-arg=REACT_APP_MOVIE_API_URL=${{ vars.REACT_APP_MOVIE_API_URL }} -t $REGISTRY/${{ env.REPOSITORY }}:$IMAGE_TAG .
          docker push $REGISTRY/${{ env.REPOSITORY }}:$IMAGE_TAG

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Update kubeconfig for EKS cluster
        run: |
          aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name cluster
      - name: Deploy to EKS
        run: |
          kubectl set image deployment/frontend frontend=${{ steps.login-ecr.outputs.registry }}/${{ env.REPOSITORY }}:${{ github.sha }}
