name: Frontend CD

on:
  push:
    paths:
      - '**/frontend/**'
      - './.github/workflows/frontend-cd.yaml'
    branches:
      - 'main'
  workflow_dispatch:

defaults:
  run:
    shell: bash
    working-directory: ./starter/frontend

env:
  AWS_REGION: us-east-1
  REPOSITORY: frontend

jobs:
  lint-test-build:
    uses: ./.github/workflows/frontend-ci.yaml
    name: Frontend CI

  push-to-ecr:
    name: push to ecr
    needs: lint-test-build
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./starter/frontend
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'false'

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "REGISTRY=${{ steps.login-ecr.outputs.registry }}" >> "$GITHUB_ENV"
          docker build \ 
            --build-arg REACT_APP_MOVIE_API_URL=http://$EXTERNALIP \
            -t $REGISTRY/${{ env.REPOSITORY }}:$IMAGE_TAG .
          docker tag $REGISTRY/${{ env.REPOSITORY }}:$IMAGE_TAG 118801238330.dkr.ecr./${{ env.AWS_REGION }}.amazonaws.com/$REGISTRY/${{ env.REPOSITORY }}:$IMAGE_TAG
          docker push 118801238330.dkr.ecr.us-east-1.amazonaws.com/$REGISTRY/${{ env.REPOSITORY }}:$IMAGE_TAG

  deploy-to-eks:
    name: deploy to eks
    needs: push-to-ecr
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./starter/frontend/k8s
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install kustomize
        run: |
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          sudo mv kustomize /usr/local/bin/

      - name: Update kubeconfig for EKS cluster
        run: |
          aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name cluster
          kustomize edit set image frontend=118801238330.dkr.ecr.us-east-1.amazonaws.com/$REGISTRY/${{ env.REPOSITORY }}:${{ github.sha }}
          kustomize build | kubectl apply -f -
